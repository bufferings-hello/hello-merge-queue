name: learning-merge-queue
run-name: ${{ github.actor }} is learning merge queue

on:
  pull_request:
    types: [opened, synchronize]
    branches: [main]
  merge_group:
    types: [checks_requested]
    branches: [main]
  push:
    branches: [main]

permissions:
  pull-requests: write

jobs:
  job_a:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `
                プルリクエストのときだけ実行されるやつ
                github.ref='${{ github.ref }}'
                github.sha='${{ github.sha }}'
                github.base_ref=${{ github.base_ref }}
                github.head_ref=${{ github.head_ref }}
              `
            })
      - run: exit 1

  job_b:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.event_name == 'merge_group'
    steps:
      - run: |
          echo "マージキューのときだけ実行されるやつ"
          echo "github.ref='${{ github.ref }}'"
          echo "github.sha='${{ github.sha }}'"
          exit 1

  job_c:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.event_name == 'push'
    steps:
      - run: |
          echo "プッシュのときだけ実行されるやつ"
          echo "github.ref='${{ github.ref }}'"
          echo "github.sha='${{ github.sha }}'"

  job_d:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - run: |
          echo "いつでも実行されるやつ"
          echo "github.ref='${{ github.ref }}'"
          echo "github.sha='${{ github.sha }}'"

  job_status:
    runs-on: ubuntu-latest
    needs: [job_a, job_b, job_c, job_d]
    if: always()
    steps:
      - if: >-
          contains(needs.*.result, 'failure')
          || contains(needs.*.result, 'cancelled')
        run: exit 1
      - run: echo "ステータスチェックOK"
