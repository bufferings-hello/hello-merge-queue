name: learning-merge-queue
run-name: ${{ github.actor }} is learning merge queue

on:
  pull_request:
    types: [opened, synchronize]
    branches: [main]
  merge_group:
    types: [checks_requested]
    branches: [main]
  push:
    branches: [main]

permissions:
  contents: read
  pull-requests: write

jobs:
  job_a:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.event_name == 'pull_request'
    steps:

      - id: get-pr
        uses: actions/github-script@v7
        with:
          result-encoding: json
          script: |
            const res = (
              await github.rest.repos.listPullRequestsAssociatedWithCommit({
                commit_sha: context.sha,
                owner: context.repo.owner,
                repo: context.repo.repo,
              })
            ).data[0];
            console.log(res);
            return res;

      - uses: actions/github-script@v7
        env:
         PR_NUMBER: ${{ fromJson(steps.get-pr.outputs.result).number }}
        with:
          script: |
            const body = 'プルリクエストのときだけ実行されるジョブ\n'
              + '```\n'
              + 'github.ref=${{ github.ref }}\n'
              + 'github.sha=${{ github.sha }}\n'
              + 'github.base_ref=${{ github.base_ref }}\n'
              + 'github.head_ref=${{ github.head_ref }}\n'
              + '```\n'
            github.rest.issues.createComment({
              issue_number: provess.env.PR_NUMBER,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            })

  job_b:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.event_name == 'merge_group'
    steps:
      - id: get-pr
        uses: actions/github-script@v7
        with:
          result-encoding: json
          script: |
            return (
              await github.rest.repos.listPullRequestsAssociatedWithCommit({
                commit_sha: context.sha,
                owner: context.repo.owner,
                repo: context.repo.repo,
              })
            ).data[0];
      - uses: actions/github-script@v7
        env:
          PR_NUMBER: ${{ fromJson(steps.get-pr.outputs.result).number }}
        with:
          script: |
            const body = 'マージキューのときだけ実行されるジョブ\n'
              + '```\n'
              + 'github.ref=${{ github.ref }}\n'
              + 'github.sha=${{ github.sha }}\n'
              + 'github.base_ref=${{ github.base_ref }}\n'
              + 'github.head_ref=${{ github.head_ref }}\n'
              + '```\n'
            github.rest.issues.createComment({
              issue_number: provess.env.PR_NUMBER,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            })
      - run: exit 1

  job_c:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.event_name == 'push'
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const body = 'プッシュのときだけ実行されるジョブ\n'
              + '```\n'
              + 'github.ref=${{ github.ref }}\n'
              + 'github.sha=${{ github.sha }}\n'
              + 'github.base_ref=${{ github.base_ref }}\n'
              + 'github.head_ref=${{ github.head_ref }}\n'
              + '```\n'
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            })

  job_status:
    runs-on: ubuntu-latest
    needs: [job_a, job_b, job_c]
    if: always()
    steps:
      - if: >-
          contains(needs.*.result, 'failure')
          || contains(needs.*.result, 'cancelled')
        run: exit 1
      - run: echo "ステータスチェックOK"
